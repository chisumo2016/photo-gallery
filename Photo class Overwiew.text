THE PHOTO CLASS
    Table in ot DB
    Parent Class
    Class Properties
    Directory Paths
    Dynamic Image Page

Creating the Database Table for our Photo Class
 Photos :- id title  description  filename  type  size

Abstracting the remaining methods
- we need to abstract  the class user
-Change the function from user class find_all_users() to find_all()
-Change the query to follow the abstraction find_all()
   return self::find_this_query("SELECT * FROM " .self::$db_table . " ");
-Change the method find_user_by_id($user_id) to find_by_id($user_id)
-Change the query for follow the abstract in find_by_id($user_id)
  $the_result_array = self::find_this_query("SELECT * FROM users WHERE id = $user_id LIMIT 1");
  $the_result_array = self::find_this_query("SELECT * FROM " .self::$db_table . " WHERE id = $user_id LIMIT 1");
-Change the query for follow the abstract  in verify_user() in user class
  $sql = "SELECT * FROM users WHERE "; to  $sql = "SELECT * FROM " .self::$db_table . " WHERE ";

Create the Parent Class
- Class inheritance
- To create a parent class which has common thing like database , methods
   example
         find_all()
         find_by_id
         find_this_query($sql)
         instantantion($the_record)
-call db_object.php
-extends db_bject class in user class to inherit the common thing
-After moving some of the common thing from use class to db_class ,some issues will be occurs
     Fatal error: Access to undeclared static property: DB_object::$db_table


Late Static Binding
 -After removing the common method  to the parent class ,  we cant reuse the  self:: key and method
     (static properties and static method)
 -Replace with self::
 -We should see users
 -solution  is use the late static binding
        $this->
        static::  this is recommended one
 -Add the db_object to init file
 -in instantantion($the_record) we need to use the calling class from php to replace the self::
 instantantion the calling class, will help to instantiate the calling class and replace the self::
      $the_object = new self;

       $calling_class = get_called_class();

      $the_object = new $calling_class;

      Test the application
<?php
     $users = User::find_all();
     foreach ($users as $user){
         echo $user->username ."<br>";
     }
  ?>

NB: READ MORE ABOUT LATE STATIC BINDING

<?php
   $users = User::find_all();
   foreach ($users as $user){
       echo $user->username ."<br>";
   }
?>

The Photo Class
- create photo class w/c inherit the DB_object
-Take some of the code from the user class and paste  parent class  (CRUD)
-Take the properties () and clean_properties to db_object  class
-Remember to change from self:: to static::
-Please test the application in admin_content,php
  <?php
     $users = User::find_all();
     foreach ($users as $user){
         echo $user->username ."<br>";
     }
  ?>


<?php
   $users = new  User();
   $users->username ="STUDENT";
   $users->save();
?>

-include the photo class in init

Adding Class Properties
-create the properties/Attribute of the photo class
-Match with the attributes from Photos DB

Testing Inherited Methods
-from
   $photos = Photo::find_all();
    foreach ($photos as $photo){
        echo $photo->title ."<br>";
    }
?>

   <?php
    $photo =  new Photo();
    $photo->title ="Woooo";
    $photo->description ="Woooo";
    $photo->filename ="image.png";
    $photo->type ="image";
    $photo->size ="12";

    $photo->save();
?>

Setting Up our Properties Array
-set the value to our class
-create the properties for our images , errors and customs error
    public  $tmp_path;
    public  $upload_directory     = "images";
    public  $custom_errors        = [];
    public  $uploaded_errors

Building Directory Paths
-set the constant path for our root path
-Define some constant
-Open init file  define the path
-to look absolute path  Applications/MAMP/htdocs/gallery_application
   <?php
     echo  INCLUDES_PATH;
   ?>






































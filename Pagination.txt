PAGINATION
-Building in object oop
-Build a Class

Setting Up our Pagination Variables
-keep track our data for pagination
-Page Variable
-how many item
-total count

 Creating the Paginate CLASS
  -create a class Paginate inside admin/includes
  -add the properties
  -create a constructor

Creating our Construct Function to Initialize some Properties
 - assign the value to the object  (automatically)

Building our Paginate Class Methods Part # 1
-will help to build our method which will help us to paginate
-next()
-previous()
-page_total()

Building our Paginate Class Methods Part # 2
-we need to write a method which will detect the next or previous
-has_previous()
-has_next()
-Offset w/c will skip the page .will give the next 10

Instantiating and Testing Paginate
-in the index page
-Add the  class into init file  - autoload class function
-create a customs sql , remove the $photos = Photo :: find_all();

http://localhost:8888/gallery_application/index.php?page=2

 Setting Up our Next Page Link
 -link to go the next page or previous
 -Build  inside the index.php
 -write if to check if it has next page

 Putting our Next Link to Work - CHALLENGE
  -Put the Next link to be able to move to the next page
     echo "<li class='next'><a href='index.php?page={$paginate->next()}'>Next</a></li>";

Creating Previous Link - SOLUTION
-go to the previous

Paginate Indication and Looping
- Show the number like googles
-create the loop  and keep tracking

 <li class='previous'><a href=''>Previous</a></li>














